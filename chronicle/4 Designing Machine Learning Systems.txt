Many people, when they hear “machine learning system”, think of ML
algorithms such as logistic regression or different types of neural networks.
However, the algorithm is only a small part of an ML system in production.
The system also includes the interface where users and developers interact
with your system, the data stack to manage your data, the hardware backend
your ML algorithm runs on, and the infrastructure to allow the system to be
developed, deployed, monitored, and updated.


However, before
talking about how to develop ML systems, it’s important to take a step back
and ask a fundamental question: when and when not to use machine
learning.

Despite an incredible amount
of excitement and hype generated by people both inside and outside the
field, machine learning (ML) is not a magic tool that can solve all problems.
Even for problems that ML can solve, ML solutions might not be the
optimal solutions.

Before starting an ML project, you might want to ask whether ML is
necessary or cost-effective.

ML solutions are only useful when there are patterns to learn. Sane
people don’t invest money into building an ML system to predict
the next outcome of a fair die because there’s no pattern in how
these outcomes are generated.

